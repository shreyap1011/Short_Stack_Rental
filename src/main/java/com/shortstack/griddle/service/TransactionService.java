package com.shortstack.griddle.service;

import com.shortstack.griddle.model.Payment;
import com.shortstack.griddle.model.Transaction;
import com.shortstack.griddle.repository.PaymentRepository;
import com.shortstack.griddle.repository.TransactionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;
// import java.util.Optional;

@Service
public class TransactionService {

    @Autowired
    TransactionRepository transactionRepository;

    @Autowired
    PaymentRepository paymentRepository;

    public List<Transaction> getAllTransactionsByPaymentid(int tenantid) {
        return transactionRepository.findByTenantid(tenantid);
    }

    public void createPayment(int tenantid, double amount, String paymentdate, String type, String note) {
        paymentRepository.createPayment(tenantid, amount, paymentdate, type, note);
    }

    public Integer lastPaymentId(){
        return paymentRepository.lastPaymentId();
    }

    public void createTransaction(int tenantid, String transactionId, String transactionType, String transactionTimestamp, String orderId, double total, String status, String sourceType, String cardType, String last4) {
        transactionRepository.save(tenantid, transactionId, transactionType, transactionTimestamp, orderId, total, status, sourceType, cardType, last4);
    }

    // No update or delete for transactions as it is generated by the payment gateway. Table only used for record keeping

}
